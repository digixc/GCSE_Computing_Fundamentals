#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil 
#+TITLE: 3.4.2 Computer Systems - Boolean Logic 
#+AUTHOR: Stephen Fone Updated AND Gate 04/02/2020

#+BEGIN_HTML
<div class=ribbon>
<a href="https://github.com/">Fork me on GitHub</a>
</div>
#+END_HTML

* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:


* Boolean Logic
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It: Types of Logic Gates
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- *George Boole (1815 - 1864)* was an English mathematician and the author of *“Mathematical Analysis of Logic”* written in 1847, in which he introduced the world to =Boolean logic=.
- *Boolean logic* is very important to computer science because of the
  way in which computers work.
- Computers operate as =digital devices= using =transistors= that are in
  one of two states, =on= or =off=.
- The transistors either transmit an electrical current (/on/) or they
  do not (/off/).
- These two states of =on= or =off= can be used to represent the =two
  conditions= of =True= (on) or =False= (off).
- These =two states= are also =represented= by the =binary= digits =1= and =0=.
- The three logic gates you need to know and understand, =NOT=, =AND=
  and =OR= logic gates.
#+BEGIN_SRC
Truth Tables - Each of the NOT, AND and OR gates can represented by a truth table
showing the output given for each possible input or combination of inputs.
Inputs are usually given algebraic letters such as A, B and C and output is usually
represented by P or Q.
Logic gates are often displayed using logic diagrams and truth tables.
Truth tables show how the input(s) of a logic gate relate to its output.
#+END_SRC

#+BEGIN_SRC
Compound Statement - Transistors can be combined into logic circuits in order to solve
problems using Boolean logic. When multiple Boolean operators are used in a statement,
they work together to examine if several conditions are true or false.
#+END_SRC

*NOT Gate*
[[file:img/NOT_Gate2.png]]

*AND Gate*
[[file:img/AND_Gate.png]]

*OR Gate*
[[file:img/OR_Gate.png]]

*Real World Example*
[[file:img/Logic_Alarm.png]]

- You can click on the input buttons to see what each of the following
  gates do.

- The first logic gate is the =NOT= gate, sometimes called an =inverter=.
#+BEGIN_HTML
<object data="js/NOT.html" width='200px' height='100px'></object>
#+END_HTML

- Then there is the AND gate
#+BEGIN_HTML
<object data="js/AND.html" width='200px' height='100px'></object>
#+END_HTML
- And finally this is an OR gate
#+BEGIN_HTML
<object data="js/OR.html" width='200px' height='100px'></object>
#+END_HTML

* Logic Circuits
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It: What are Logic Circuits?
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
#+BEGIN_SRC
Logic Circuits - Logic gates are often combined to create logic circuits that can
perform more complex operations.
A logic circuit is designed with multiple logic gates, so that it can take a variety
of inputs (can be hundreds) and process them to allow decisions to be made according
to the various inputs.
They are the basic building blocks of many electronic circuits found in computer RAM,
household devices, games consoles, and sensors in a cars or plane, or at different
points in a production line in a factory.
#+END_SRC
*Example Logic Circuits*
[[file:img/Example1_Logic.png]]
[[file:img/Example2_Logic.png]]
[[file:img/Example3_Logic.png]]

*Logic Puzzler Game*
- Test your knowledge with the following Boolean Logic Game:
#+BEGIN_HTML
<script src="https://www.khanacademy.org/computer-programming/logic-gate-puzzler/1522357785/embed.js?editor=no&buttons=no&author=no&embed=yes"></script>
#+END_HTML


** Badge It: Logic Gates - Exam Style Questions
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:
*Silver*: Answer the following exam questions:
1. A logic gate can be written as *P = A AND B*.
 - a) State the value of *input B* when *input A* is *1* and *output P* is *0*?
 - b) A *NOT* logic gate is placed after the *AND* logic gate to make the
   logic diagram below. *State* the *input values* when output *P* is *0*?
[[file:img/Silver_Q1.png]]

2. A series of transistors make a two-level logic circuit (NOT A) AND (B AND C).
 - a) Complete the truth table below:
|*A*|*B*|*C*| *NOT A*  |*B AND C* |    *(NOT A) AND (B AND C)*   |
|---+---+---+----------+----------+------------------------------|
| 0 | 0 | 0 |          |          |                              |
|---+---+---+----------+----------+------------------------------|
| 0 | 0 | 1 |          |          |                              |
|---+---+---+----------+----------+------------------------------|
| 0 | 1 | 0 |          |          |                              |
|---+---+---+----------+----------+------------------------------|
| 0 | 1 | 1 |          |          |                              |
|---+---+---+----------+----------+------------------------------|
| 1 | 0 | 0 |          |          |                              |
|---+---+---+----------+----------+------------------------------|
| 1 | 0 | 1 |          |          |                              |
|---+---+---+----------+----------+------------------------------|
| 1 | 1 | 0 |          |          |                              |
|---+---+---+----------+----------+------------------------------|
| 1 | 1 | 1 |          |          |                              |
|---+---+---+----------+----------+------------------------------|


- /Upload to Computer Systems - Boolean Logic: Silver on BourneToLearn/

** Badge It: Logic Expressions
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:
*Gold*: Answer the following questions:
1. Look at the three logic expressions in the box below:
[[file:img/Gold_Q1.png]]
 - a) Draw a logic circuit for each expression.
 - b) Construct a truth table for each expression.

- /Upload to Computer Systems - Boolean Logic: Gold on BourneToLearn/

** Badge It: Logic Circuitss
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:
*Platinum*: Answer the following questions:
1. Complete the truth table for the following logic diagram:
[[file:img/Plat_Q1.png]]

|*A*|*B*|*C*|   *D = A AND B*     |    *P = D OR C*    |
|---+---+---+---------------------+--------------------|
| 0 | 0 | 0 |                     |                    |
|---+---+---+---------------------+--------------------|
| 0 | 0 | 1 |                     |                    |
|---+---+---+---------------------+--------------------|
| 0 | 1 | 0 |                     |                    |
|---+---+---+---------------------+--------------------|
| 0 | 1 | 1 |                     |                    |
|---+---+---+---------------------+--------------------|
| 1 | 0 | 0 |                     |                    |
|---+---+---+---------------------+--------------------|
| 1 | 0 | 1 |                     |                    |
|---+---+---+---------------------+--------------------|
| 1 | 1 | 0 |                     |                    |
|---+---+---+---------------------+--------------------|
| 1 | 1 | 1 |                     |                    |
|---+---+---+---------------------+--------------------|

2. A car uses a logic circuit to decide whether to start the engine or
   not.
  - The car has two buttons, labelled *S* (START) and *D* (DRIVE).
  - The engine also starts if the ignition switch *I* is turned on.
  - a) Draw the logic circuit for this system, with *Z* as an output.
  - b) Write a Boolean expression for this logic circuit.
  - c) State all possible values of the inputs and outputs if:
    - i) Button *D* is on but the car doesn't start.
    - ii) Button *I* and *S* are both on. 

- /Upload to Computer Systems - Boolean Logic: Platinum on BourneToLearn/
